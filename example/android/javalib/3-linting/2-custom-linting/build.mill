package build

import mill._
import mill.javalib.android.{AndroidSdkModule, AndroidLintModule}

// Create and configure an Android SDK module to manage Android SDK paths and tools.
object androidSdkModule0 extends AndroidSdkModule {
  def buildToolsVersion = "35.0.0"
  def bundleToolVersion = "1.17.2"
}

// Actual android application
object app extends AndroidLintModule {
  def androidSdkModule = mill.define.ModuleRef(androidSdkModule0)

  // Set path to the location of the project source codes
  def androidLintSources = Task { Some(PathRef(millSourcePath / "src" / "main" / "java")) }

  // Set path to the custom `lint.xml` config file. It is usually at the root of the project
  def androidLintConfigPath = Task { Some(PathRef(millSourcePath / "lint.xml")) }

  // Set path to `.jar` files in this case (or `.class` files)
  def androidLintClasspath = Task { Some(androidJar()) }

  // Set the linting report to be generated as a text file
  def androidLintReportFmt = Task { "txt" }
}

/** See Also: app/AndroidManifest.xml */
/** See Also: app/resources/values/colors.xml */
/** See Also: app/resources/values/strings.xml */
/** See Also: app/src/main/java/com/helloworld/app/MainActivity.java */
/** See Also: app/lint.xml */

// The `lint.xml` file shown above ignores the `MissingApplicationIcon` error in the code as
// the project is for demostration of using custom `lint.xml` config file. There are no icons
// for this demo project.

/** Usage

> ./mill show app.androidLintRun  # Display full path to the linting report in HTML
".../out/app/androidLintRun.dest/report.txt"

> cat ".../out/app/androidLintRun.dest/report.txt" # Output report content to terminal
No issues found.

sed -i.bak 's/severity="ignore"/severity="warning"/g' app/lint.xml # Set `MissingApplicationIcon` severity level to warning

> ./mill app.androidLintRun # Rerun the android lint task

> cat ".../out/app/androidLintRun.dest/report.txt" # Output the changes in the report
0 errors, 1 warning
*/
